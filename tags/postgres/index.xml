<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgres on { federico-arias }</title>
    <link>https://federico-arias.github.io/tags/postgres/</link>
    <description>Recent content in postgres on { federico-arias }</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 14 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://federico-arias.github.io/tags/postgres/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick tip: setting up PostgreSQL on Linux</title>
      <link>https://federico-arias.github.io/posts/quick-tip-set-up-postgres/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://federico-arias.github.io/posts/quick-tip-set-up-postgres/</guid>
      <description>Here is a quick bash script to remind me how to set-up a Postgres DB locally without knowing the postgres password.
#!/bin/bash db_name=$1 db_user=&amp;#34;${db_name}user&amp;#34; cat &amp;lt;&amp;lt; EOF &amp;gt; /tmp/createdb create database ${db_name}; create user ${db_user}; alter user ${db_user} with password &amp;#39;pwd&amp;#39;; grant all privileges on database ${db_name} to ${db_user}; show hba_file; EOF sudo -u postgres psql postgres -f /tmp/createdb I usually use a Docker image for this, but on some occasions this might come in handy.</description>
    </item>
    
    <item>
      <title>A dashboard to assess occupational safety and health</title>
      <link>https://federico-arias.github.io/projects/qualivita/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://federico-arias.github.io/projects/qualivita/</guid>
      <description>The solution proposed was a single-page application that allowed the user to create questionnaires that generated instant visualizations and dashboards.
FrontEnd The React, Redux, Typescript combo was used to take advantage of composability and to get rid of the problems that were caused by a lack of type-safety in previous projects.
I also continued to work with Nir Kaufman&amp;rsquo;s design patterns  to organize asynchronous code as message passing, ditching react-thunk in favor of middlewares.</description>
    </item>
    
    <item>
      <title>A social network for neighbourhoods</title>
      <link>https://federico-arias.github.io/projects/social-network-for-neighbourhoods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://federico-arias.github.io/projects/social-network-for-neighbourhoods/</guid>
      <description>The solution proposed was a single-page application that relied on a Postgres database for persistence.
FrontEnd One of the challenges of the project was coordinating the work between two front-end developers while I developed the backend and part of the front-end. To this purpose, we used Apiary to simulate a REST API interaction. Then, we just swapped Apiary&amp;rsquo;s URI with our backend.
I discovered Nir Kaufman&amp;rsquo;s design patterns, and decided to try them out, ditching redux-thunk in favor of middlewares.</description>
    </item>
    
  </channel>
</rss>